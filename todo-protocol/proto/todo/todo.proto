syntax = "proto3";

package todo;

option go_package = "todo-back/infrastructure/handler/grpc/proto_go_gen/todo";

import "google/protobuf/timestamp.proto";
import "user/user.proto";
import "auth/authentication.proto";
import "list/list.proto";

service TodoRpc {
  rpc List(ListInput) returns (ListOutput) {}
  rpc Get(GetInput) returns (GetOutput) {}
  rpc Create(CreateInput) returns (CreateOutput) {}
  rpc Update(UpdateInput) returns (UpdateOutput) {}
  rpc Delete(DeleteInput) returns (DeleteOutput) {}
}

message TodoFilter {
  optional TodoId id = 1;
  optional string title = 2;
  optional list.FilterKind title_filter_kind = 3;
  optional string description = 4;
  optional list.FilterKind description_filter_kind = 5;
  optional Status status = 6;
}

message TodoSort {
  optional list.SortField create_time = 1;
  optional list.SortField done_time = 2;
}

message ListInput {
  authentication.Session session = 1;
  list.Paging paging = 2;
  optional TodoFilter filter = 3;
  optional TodoSort sort = 4;
}

message ListOutput {
  bool has_next = 1;
  repeated Todo todos = 2;
}

message GetInput {
  authentication.Session session = 1;
  TodoId id = 2;
}

message GetOutput {
  Todo todo = 1;
}

message CreateInput {
  authentication.Session session = 1;
  CreateTodo todo = 2;
}

message CreateOutput {}

message UpdateInput {
  authentication.Session session = 1;
  UpdateTodo todo = 2;
}
message UpdateOutput {}

message DeleteInput {
  authentication.Session session = 1;
  TodoId id = 2;
}
message DeleteOutput {}

message TodoId { string id = 1; }

message CreateTodo {
  string title = 1;
  string description = 2;
  Status status = 3;
}

message UpdateTodo {
  optional string title = 1;
  optional string description = 2;
  optional string status = 3;
}

message Todo {
  TodoId id = 1;
  string title = 2;
  string description = 3;
  Status status = 4;
  user.UserId user_id = 5;
  google.protobuf.Timestamp create_time = 6;
}

enum Status {
  done = 0;
  scheduled = 1;
  draft = 2;
}
